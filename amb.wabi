(defx test
    e (a b)
  (wrt "test: ") (pr a) (wrt " ")
  (let (a0 (eval e a) b0 (eval e b))
    (prn (if (= a0 b0) :ok (list :fail a0 b0)))
    (= a0 b0)))

(test (with-guard (with-amb (amb)) :amb/fail (_) :nil)
      :nil)

(test (with-amb (amb 1)) 1)

(test (with-amb (amb 1 2)) 1)

(test (with-amb
       (let (a (amb 1 2 3) b (amb 4 5 6))
         (if (not (= (* a b) 15)) (amb))
         (list :ok a b)))
      (list :ok 3 5))

(test (with-guard
       (with-amb
        (let (a (amb 1 2 3) b (amb 4 5 6))
          (cmt (prn (list :testing a b)))
          (if (not (= (* a b) 155)) (amb)))
        (list :ok a b))
       :amb/fail (_) :amb-fail)
      :amb-fail)

(test (with-guard
       (with-amb
        (let-a (a (1 2 3) b (4 5 6))
          (cmt (prn (list :testing a b)))
          (if (not (= (* a b) 155)) (amb))
          (list :ok a b)))
       :amb/fail (_) :amb-fail)
      :amb-fail)
